# Quran App – Functional Requirements (MVP)

This document captures the functional requirements for the first 5 core features of the Quran App. Each section provides the purpose, UI components, behaviors, and developer notes.  

⚠️ **Note:** Wherever UI structure/layout is needed, please **Refer wireframe #**.

---

## Table of Contents
1. [Home / Surah List Screen](#1-home--surah-list-screen)  
2. [Audio Config Modal](#2-audio-config-modal)  
3. [Player](#3-player)  
4. [Favorites Screen](#4-favorites-screen)  
5. [Settings Screen (MVP - Light)](#5-settings-screen-mvp---light)  

---

## 1. Home / Surah List Screen

### Purpose
Provide users with access to the list of 114 Surahs for browsing, searching, and initiating audio playback.

### UI Components
- **Top Bar**: App title, search icon  
- **Surah List**:  
  - Displays Surah number, Arabic name, English name, verse count  
  - Favorite toggle (♥️)  
- **Search Bar**: Opens when search icon is tapped  
- **Floating Action Button (FAB)**: 3 states  
  - **State 1 (Play icon)** → Opens Audio Config Modal  
  - **State 2 (Custom icon)** → Opens Player (paused/previous playback session)  
  - **State 3 (Pause icon)** → Opens Player (currently playing audio)  

### Behavior
- Search supports **exact match only**  
- Favorites toggle switches between two icons:  
  - 
  - 
- Tapping a Surah:  
  - Opens **Audio Config Modal**  
  - User selects Reciter + Translation + Range → Proceeds to Player  

### Developer Notes
- Static list of 114 Surahs (from API placeholder, not hardcoded text for now)  
- FAB states controlled by player lifecycle  
- Preferences not persisted unless defined in **Settings Screen**  

**Refer wireframe #**

---

## 2. Audio Config Modal

### Purpose
Allow users to configure audio playback before starting.

### UI Components
- **Dropdowns**:  
  - Reciter (fetched from API)  
  - Translation (language + version, configurable in code)  
- **Range Selector**:  
  - Select Surah, Ayah range  
- **Buttons**: Play, Cancel  

### Behavior
- Tapping Play → Launches **Player** with selected config  
- Configurable mapping of translation versions (per language)  
- If launched from FAB → depends on FAB state (see Home Screen section)  

### Developer Notes
- File: `lib>modals>audio_config_modal.dart`  
- No persistence of choices unless explicitly stored in Settings  

**Refer wireframe #**

---

## 3. Player

### Purpose
Provide playback controls for Arabic recitation + translation in a docked panel.

### UI Components
- **Docked Panel** (bottom of screen, not fullscreen takeover)  
- **Controls**: Play/Pause, Stop, Seek  
- **Info**: Current Surah, Ayah, Reciter, Translation  

### Behavior
- Audio sequence:  
  - Verse → Arabic audio → 300ms pause → Translation audio  
  - Between verses → Translation (prev) → 500ms pause → Arabic (next)  
- Playback pattern **hardcoded** for MVP  
- Player is always docked and visible across navigation  

### Developer Notes
- File: `lib>widgets>player.dart`  
- Audio source: API (Arabic + Translation)  
- FAB states must sync with Player lifecycle  

**Refer wireframe #**

---

## 4. Favorites Screen

### Purpose
Allow users to save and quickly access custom ranges of Surahs/Ayahs for memorization and playback.

### UI Components
- **Top Bar**: “Favorites” title + back navigation  
- **Favorites List**: Each entry shows:  
  - Surah number + Ayah range  
  - Reciter & Translation language info  
  - Play button  
  - Trash icon (delete)  
- **Floating Action Button (FAB)**: “+” opens **Audio Config Modal**  

### Behavior
- Adding favorite:  
  - User taps “+” → Opens Audio Config Modal → Config selected → “Save to Favorites”  
- Delete favorite:  
  - Confirmation dialog required:  
    - Title: “Delete Favorite”  
    - Message: “Are you sure you want to remove this favorite?”  
    - Buttons: Yes (Primary), Cancel (Secondary)  

### Developer Notes
- File: `lib>screens>favorites.dart`  
- Storage mechanism: Local persistence (SharedPreferences or local DB)  
- No swipe-to-delete; only **Trash icon + confirmation**  

**Refer wireframe #**

---

## 5. Settings Screen (MVP - Light)

### Purpose
Store user defaults and provide basic app management tools.

### UI Components
- **Default Preferences**:  
  - Arabic Reciter (dropdown)  
  - Translation (Language + Version dropdown)  
  - Playback Speed (dropdown: 0.5x, 1x, 1.25x, 1.5x, 2x)  
- **Downloads Management**:  
  - Clear Cache button  
  - Downloaded Surahs list (with remove option)  
- **System Info**:  
  - App version (non-editable)  

### Behavior
- **Preferences**: Persist user defaults locally; auto-apply when playing  
- **Clear Cache**:  
  - Confirmation dialog required  
  - Deletes cached audio/translations  
- **Downloads**:  
  - List of downloaded Surahs (Surah number + name)  
  - Remove action requires confirmation dialog  
- **System Info**: App version pulled from build metadata (read-only)  

### Developer Notes
- File: `lib>screens>settings.dart`  
- Use `SharedPreferences` for preferences persistence  
- Use `package_info_plus` for app version display  
- Confirmation dialogs must follow standard app design  

**Refer wireframe #**
